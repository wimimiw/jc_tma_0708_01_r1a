/*******************************Copyright (c)***********************************
 *
 *              Copyright (C), 1999-2011, Jointcom . Co., Ltd.
 *
 *------------------------------------------------------------------------------
 * @file	:rf_parameter.c
 * @author	:mashuai
 * @version	:v2.0 
 * @date	:2011.10.20
 * @brief	:
 *------------------------------------------------------------------------------
 * @attention
 ******************************************************************************/
#ifndef __RF_PARAMETER_C__
#define __RF_PARAMETER_C__
#endif
/* Includes ------------------------------------------------------------------*/
#include "config.h"
/* Private typedef -----------------------------------------------------------*/
/* Private define ------------------------------------------------------------*/
//CAT24WC256中0x7000开始存放数据
#define EE_OFFSET  				0x7000
#define EE_Rec0					EE_OFFSET + 0x0050		//1字节，
#define EE_Rec1					EE_OFFSET + 0x0060		//1字节，
/****gain*****/
#define EE_Att1					EE_OFFSET + 0x0001		//1字节，1#衰减器设定值
#define EE_GainOffset1			EE_OFFSET + 0x0002		//1字节，1#增益调整值
#define EE_Att2			    	EE_OFFSET + 0x0101		//1字节，2#衰减器设定值
#define EE_GainOffset2			EE_OFFSET + 0x0102		//1字节，2#增益调整值
#define EE_IO1                  EE_OFFSET + 0x0105		//1字节，IO1控制
#define EE_IO2                  EE_OFFSET + 0x0106		//1字节，IO2控制
#define EE_IO3                  EE_OFFSET + 0x0107		//1字节，IO1控制
/*****current*****/
#define	EE_CurCo				EE_OFFSET + 0x0080		//2字节，LNA电流斜率
#define	EE_CurOffset			EE_OFFSET + 0x0082		//2字节，LNA电流检测调整值
#define	EE_CurCo_all			EE_OFFSET + 0x0184		//2字节，LNA总电流斜率				 1
#define	EE_CurOffset_all		EE_OFFSET + 0x0186		//2字节，LNA总电流检测调整值		 2
#define	EE_LnaCurHlim			EE_OFFSET + 0x0084		//2字节，LNA电流上限				 3
#define EE_LnaCurLlim			EE_OFFSET + 0x0086		//2字节，LNA电流下限				 4
/*****上行module*******/
#define	EE_RF_No				EE_OFFSET + 0x00C0		//1字节，射频模块编号
#define EE_RFSW1				EE_OFFSET + 0x00C1      //1字节，--------》开关1
#define EE_RFSW2				EE_OFFSET + 0x00C2      //1字节，--------》开关2 
#define EE_RFSW_RX2				EE_OFFSET + 0x00CB		//RX2选择开关
/*****温度*******/
#define	EE_GainNumer			EE_OFFSET + 0x00A2		//1字节，增益温补系数分子
#define EE_GainDenomi			EE_OFFSET + 0x00A3		//1字节，增益温补系数分母
/******debug maker**********/
#define	EE_TEST_TEMP			EE_OFFSET + 0x00D0		//2字节，设置温度
#define	EE_TEST_MARK			EE_OFFSET + 0x00D2		//1字节，设置调试状态
#define	EE_TEMP_VALUE   		EE_OFFSET + 0x00D3		//1字节，设置温度补偿的基准值
#define	EE_BASE_TEMP   		    EE_OFFSET + 0x00D4		//1字节，设置温度补偿的基准值
/******version**********/
#define	EE_VERSION				EE_OFFSET + 0x00E0		//2字节，程序版本号
#define	EE_ALL_CHECKSUM			EE_OFFSET + 0x00E2		//2字节，程序校验和
#define	EE_MODULE_No			EE_OFFSET + 0x00E4		//10字节，模块序列号
#define EE_DOWN_FLAG        	EE_OFFSET + 0x01FF		//1字节，软件下载标志
/*******power******added by wangzuojia 2010.7.26***/
#define	EE_PwrOutOffset			EE_OFFSET + 0x0022		//输出功率定标值，2字节
#define	EE_PwrOutCo				EE_OFFSET + 0x0024		//输出功率检测斜率，2字节
#define	EE_PwrReOffset			EE_OFFSET + 0x0026		//反射功率定标值，2字节
#define	EE_PwrReCo				EE_OFFSET + 0x0028		//反射功率检测斜率，2字节
#define	EE_ValueA				EE_OFFSET + 0x0035		//功率系数A，2字节
#define	EE_ValueB				EE_OFFSET + 0x0037		//功率系数B，2字节
#define EE_REFADJVAL            EE_OFFSET + 0x0400		//反射功率校准值
#define EE_OUTADJVAL            EE_OFFSET + 0x0500		//输出功率校准值
/* Private macro -------------------------------------------------------------*/
/* Private variables ---------------------------------------------------------*/
/* Private function prototypes -----------------------------------------------*/
/* Private functions ---------------------------------------------------------*/
/**
  * @brief  :读取flash中的代码，计算校验和计算结果保存在全局变量all_checksum中
  * @param  :None
  * @retval :None
  * @author	:mashuai
  * @version:v2.0
  * @date	:2011.10.20
  */
static U16 CalcCheckSum(void)
{
	U8  *pFlash;	
	U16 checksum= 0;

	for (pFlash = (U8*)0x8000000; pFlash < (U8*)0x8010000; pFlash++)
	{
		checksum += *pFlash;
	}
	
	return checksum;
}
/**
  * @brief  :检测下载标志用于确定是否需要发下载确认数据包
  * @param  :None
  * @retval :是否执行了软件升级
  * @author	:mashuai
  * @version:v2.0
  * @date	:2011.10.20
  */
U8 CheckDownFlag(void)
{
    return FALSE;
}
/**
  * @brief  :
  * @param  :None
  * @retval :None
  * @author	:mashuai
  * @version:v2.0
  * @date	:2011.10.20
  */
BOOL SaveParam(U16 iaddr, U8 *pbuf, U16 plen)
{
	return WriteE2prom(EE_OFFSET + iaddr,pbuf,plen); 
}
/**
  * @brief  :
  * @param  :None
  * @retval :None
  * @author	:mashuai
  * @version:v2.0
  * @date	:2011.10.20
  */
BOOL FetchParam(U16 iaddr, U8 *pbuf, U16 plen)
{
	return ReadE2prom(EE_OFFSET + iaddr,pbuf,plen);	
}
/**
  * @brief  :初始化RF模块的各类射频参数以及与系统相关的其余参数变量
  * @param  :None
  * @retval :None
  * @author	:mashuai
  * @version:v2.0
  * @date	:2011.10.20
  */
void InitParam(void)
{
	U8 i;

	memset((U8*)&gFctParam,0x00,sizeof(gFctParam));
	gFctParam.gpreRfTemp 	= 50;	           //初始化温度状态
	gFctParam.gcurRfTemp 	= 50;
	gFctParam.gtestRfTemp 	= 50;			   //测试温度		

	for ( i = 0 ; i < JointExeTabSize() ; i ++ )
	{
		if ( RF_PARAM_BOTHWR == jointExeTab[i].type ) 
			FetchParam(jointExeTab[i].cmd,jointExeTab[i].data,jointExeTab[i].len);
	}

	gAsbParam.vswr = gFctParam.version;

	ReadE2prom(EE_REFADJVAL,(U8*)gRefAdjVal,4*PA_ADJ_VAL_STR_LEN);		//反射功率校准值
	ReadE2prom(EE_OUTADJVAL,(U8*)gOutAdjVal,4*PA_OUT_ADJ_VAL_STR_LEN);	//输出功率校准值
	
	//输出功率校准值序列初始化
	for ( i = PA_OUT_ADJ_VAL_STR_MIN; i <= PA_OUT_ADJ_VAL_STR_MAX; i++ )
	{
		if ( (gOutAdjVal[i].adVal  > 1023) 
		  || (gOutAdjVal[i].dbmVal < (PA_OUT_ADJ_VAL_MIN * 100 - 50)) 
		  || (gOutAdjVal[i].dbmVal > (PA_OUT_ADJ_VAL_MAX * 100 + 50)) )
		{
			gOutAdjVal[i].dbmVal = (i + PA_OUT_ADJ_VAL_MIN_PRE) * 100;
			gOutAdjVal[i].adVal  = 300 + i * 16;
      	}
	}

	//反射功率校准值序列初始化
	for ( i = PA_ADJ_VAL_STR_MIN; i <= PA_ADJ_VAL_STR_MAX; i++ )
	{
		if ( (gRefAdjVal[i].adVal  > 1023) 
		  || (gRefAdjVal[i].dbmVal < (PA_ADJ_VAL_MIN * 100 - 50)) 
		  || (gRefAdjVal[i].dbmVal > (PA_ADJ_VAL_MAX * 100 + 50)) )
		{
			gRefAdjVal[i].dbmVal = (i + PA_ADJ_VAL_MIN_PRE) * 100;
			gRefAdjVal[i].adVal  = 100 + i * 16;
      	}
	}

	CalcCheckSum();
}
/**
  * @brief  :parameter aask routine
  * @param  :None
  * @retval :None
  * @author	:mashuai
  * @version:v2.0
  * @date	:2011.10.20
  */
void TaskParameter(void)
{
	//do nothing!	
}
/********************************END OF FILE***********************************/
